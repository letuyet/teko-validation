{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "definitions": {
    "nonEmptyString": {
      "type": "string",
      "minLength": 1
    },
    "nonEmptyInteger": {
      "type": "integer",
      "minimum": 1
    },
    "nonEmptyNumber": {
      "type": "number",
      "minLength": 1
    }
  },
  "type": "object",
  "required": [
    "id",
    "code",
    "createdAt",
    "channel",
    "salesmanId",
    "storeId",
    "storeName",
    "priceTable",
    "paymentDuration",
    "grandTotal",
    "totalDiscount",
    "paidAmount",
    "COD",
    "otherAmount",
    "inventoryCode",
    "note",
    "shipDate",
    "install",
    "delivery",
    "technicalSupport",
    "payments",
    "customer",
    "addresses",
    "items"
  ],
  "properties": {
    "id": {
      "$ref": "#/definitions/nonEmptyString"
    },
    "code": {
      "$ref": "#/definitions/nonEmptyString"
    },
    "createdAt": {
      "$ref": "#/definitions/nonEmptyNumber",
      "maximum": "$CURRENT_TIMESTAMPS"
    },
    "channel": {
      "$ref": "#/definitions/nonEmptyInteger"
    },
    "salesmanId": {
      "oneOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ]
    },
    "storeId": {
      "$ref": "#/definitions/nonEmptyString"
    },
    "storeName": {
      "$ref": "#/definitions/nonEmptyString"
    },
    "priceTable": {
      "type": "integer",
      "minimum": 0
    },
    "paymentDuration": {
      "type": "integer",
      "minimum": 0
    },
    "grandTotal": {
      "type": "number",
      "minimum": 0,
      "allOf": [
        {
          "calculateAndCompare": {
            "operation": [
              {
                "$totalItemsPrice": "/items"
              },
              "-",
              {
                "$data": "/totalDiscount"
              }
            ]
          },
          "err_msg": "grandTotal !=  sum(items.rowTotal)- totalDiscount = sum(items.quantity*items.price) - totalDiscount"
        },
        {
          "calculateAndCompare": {
            "operation": [
              {
                "$data": "/paidAmount"
              },
              "+",
              {
                "$data": "/COD"
              },
              "+",
              {
                "$data": "/otherAmount"
              }
            ]
          },
          "err_msg": "grandTotal != paidAmount + COD + otherAmount"
        }
      ]
    },
    "totalDiscount": {
      "type": "number",
      "minimum": 0,
      "maximum": {
        "$data": "/grandTotal"
      }
    },
    "paidAmount": {
      "type": "number",
      "minimum": 0,
      "maximum": {
        "$data": "/grandTotal"
      }
    },
    "COD": {
      "type": "number",
      "minimum": 0,
      "maximum": {
        "$data": "/grandTotal"
      }
    },
    "otherAmount": {
      "type": "number",
      "minimum": 0,
      "maximum": {
        "$data": "/grandTotal"
      }
    },
    "inventoryCode": {
      "$ref": "#/definitions/nonEmptyString"
    },
    "note": {
      "type": "string"
    },
    "shipDate": {
      "$ref": "#/definitions/nonEmptyNumber",
      "minimum": "$CURRENT_TIMESTAMPS"
    },
    "install": {
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "type": "null"
        }
      ],
      "err_msg": "error install"
    },
    "delivery": {
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "type": "null"
        }
      ],
      "err_msg": "error delivery"
    },
    "technicalSupport": {
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "type": "null"
        }
      ],
      "err_msg": "error technicalSupport"
    },
    "payments": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": [
          "opsId",
          "paymentId",
          "paymentMethod",
          "amount"
        ],
        "properties": {
          "opsId": {
            "type": "integer",
            "minimum": 0
          },
          "paymentId": {
            "type": "string",
            "minimum": 0
          },
          "paymentMethod": {
            "type": "string",
            "minimum": 0
          },
          "bankAccount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "err_msg": "bank_account"
          },
          "ref": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "err_msg": "bank_account"
          },
          "amount": {
            "$ref": "#/definitions/nonEmptyInteger"
          },
          "timeTransfer": {
            "oneOf": [
              {
                "$ref": "#/definitions/nonEmptyNumber",
                "maximum": "$CURRENT_TIMESTAMPS"
              },
              {
                "type": "null"
              }
            ],
            "err_msg": "time_transfer"
          },
          "debtorId": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "err_msg": "debtorId"
          }
        },
        "allOf": [
          {
            "oneOf": [
              {
                "properties": {
                  "paymentMethod": {
                    "enum": [
                      "CARD"
                    ]
                  },
                  "ref": {
                    "$ref": "#/definitions/nonEmptyString"
                  }
                }
              },
              {
                "properties": {
                  "paymentMethod": {
                    "not": {
                      "enum": [
                        "CARD"
                      ]
                    }
                  }
                }
              }
            ],
            "err_msg": "payments.paymentMethod = CARD, payments.ref != null|empty"
          },
          {
            "oneOf": [
              {
                "properties": {
                  "paymentMethod": {
                    "enum": [
                      "DEBT"
                    ]
                  },
                  "debtorId": {
                    "$ref": "#/definitions/nonEmptyInteger"
                  }
                }
              },
              {
                "properties": {
                  "paymentMethod": {
                    "not": {
                      "enum": [
                        "DEBT"
                      ]
                    }
                  }
                }
              }
            ],
            "err_msg": "payments.paymentMethod = DEBT, payments.debtorId != null|empty"
          }
        ]
      }
    },
    "customer": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "asiaCrmId": {
          "type": "string"
        },
        "name": {
          "$ref": "#/definitions/nonEmptyString"
        },
        "phone": {
          "$ref": "#/definitions/nonEmptyString",
          "pattern": "^[^a-zA-Z]+$"
        },
        "address": {
          "$ref": "#/definitions/nonEmptyString"
        }
      }
    },
    "addresses": {
      "oneOf": [
        {
          "type": "null"
        },
        {
          "type": "object",
          "properties": {
            "shipping": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "err_msg": "Error shipping.name"
                    },
                    "street": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "err_msg": "Error shipping.street"
                    },
                    "addressCode": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "err_msg": "Error shipping.addressCode"
                    },
                    "email": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "err_msg": "Error shipping.email"
                    },
                    "telephone": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "err_msg": "Error shipping.telephone"
                    }
                  }
                }
              ],
              "err_msg": "Error shipping"
            },
            "billing": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "err_msg": "Error billing.name"
                    },
                    "email": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "err_msg": "Error billing.email"
                    },
                    "address": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "err_msg": "Error billing.address"
                    },
                    "telephone": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "err_msg": "Error billing.telephone"
                    },
                    "taxCode": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "err_msg": "Error billing.taxCode"
                    },
                    "billingType": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "err_msg": "Error billing.billingType"
                    },
                    "printAfter": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "err_msg": "Error billing.printAfter"
                    },
                    "printPretaxPrice": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "err_msg": "Error billing.printPretaxPrice"
                    }
                  },
                  "allOf": [
                    {
                      "oneOf": [
                        {
                          "properties": {
                            "name": {
                              "$ref": "#/definitions/nonEmptyString"
                            },
                            "address": {
                              "$ref": "#/definitions/nonEmptyString"
                            },
                            "taxCode": {
                              "$ref": "#/definitions/nonEmptyString",
                              "pattern": "^[0-9]+$"
                            },
                            "billingType": {
                              "$ref": "#/definitions/nonEmptyString"
                            }
                          }
                        },
                        {
                          "properties": {
                            "name": {
                              "not": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        }
                      ],
                      "err_msg": "If address.billing.name#null|empty, address, taxCode, billingType != null|empty, taxCode khong chua ki tu chu cai"
                    }
                  ]
                }
              ],
              "err_msg": "Error billing"
            }
          }
        }
      ]
    },
    "items": {
      "type": "array",
      "minItems": 1,
      "items": {
        "required": [
          "sku",
          "name",
          "quantity",
          "vat",
          "unitPrice",
          "discountAmount",
          "price",
          "rowTotal"
        ],
        "properties": {
          "sku": {
            "$ref": "#/definitions/nonEmptyString"
          },
          "name": {
            "$ref": "#/definitions/nonEmptyString"
          },
          "quantity": {
            "$ref": "#/definitions/nonEmptyNumber"
          },
          "vat": {
            "type": "number",
            "minimum": 0
          },
          "unitPrice": {
            "type": "number",
            "minimum": 0
          },
          "discountAmount": {
            "type": "number",
            "minimum": 0
          },
          "price": {
            "type": "number",
            "minimum": 0
          },
          "rowTotal": {
            "type": "number",
            "minimum": 0
          }
        },
        "allOf": [
          {
            "calculateAndCompare": {
              "operation": [
                {
                  "$p_data": "/unitPrice"
                },
                "-",
                {
                  "$p_data": "/discountAmount"
                }
              ],
              "compareValue": {
                "$p_data": "/price"
              },
              "err_msg": "price != unitPrice-discountAmount"
            }
          },
          {
            "calculateAndCompare": {
              "operation": [
                {
                  "$p_data": "/price"
                },
                "*",
                {
                  "$p_data": "/quantity"
                }
              ],
              "compareValue": {
                "$p_data": "/rowTotal"
              },
              "err_msg": "rowTotal != price*quantity"
            }
          }
        ]
      }
    }
  },
  "allOf": [
    {
      "oneOf": [
        {
          "properties": {
            "channel": {
              "enum": [
                1,
                3,
                4
              ]
            },
            "salesmanId": {
              "$ref": "#/definitions/nonEmptyInteger"
            }
          }
        },
        {
          "properties": {
            "channel": {
              "not": {
                "enum": [
                  1,
                  3,
                  4
                ]
              }
            },
            "salesmanId": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        }
      ],
      "err_msg": "If channel = Agent|Direct|Telesale, salesmanId != null|empty"
    },
    {
      "oneOf": [
        {
          "properties": {
            "delivery": {
              "enum": [
                true
              ]
            },
            "addresses": {
              "properties": {
                "shipping": {
                  "properties": {
                    "name": {
                      "$ref": "#/definitions/nonEmptyString"
                    },
                    "street": {
                      "$ref": "#/definitions/nonEmptyString"
                    },
                    "addressCode": {
                      "$ref": "#/definitions/nonEmptyString",
                      "pattern": "^[0-9]+$"
                    },
                    "telephone": {
                      "$ref": "#/definitions/nonEmptyString",
                      "pattern": "^[^a-zA-Z]+$"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "properties": {
            "delivery": {
              "enum": [
                false
              ]
            },
            "addresses": {
              "properties": {
                "shipping": {
                  "oneOf": [
                    {
                      "properties": {
                        "name": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "street": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "addressCode": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "telephone": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          }
        }
      ],
      "err_msg": "if delivery = true, shipping required, addressCode va telephone chua ki tu khac chu cai"
    }
  ]
}